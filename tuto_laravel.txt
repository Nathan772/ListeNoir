Remarques générales sur le tuto Laravel :

Pour brancher laravel à la bdd, il faut passer par le fichier .env

projet technos :

-sqlite x --> MARIA DB
-laravel
-reactJs
-css
-html

prochain projet: 

-mariaDB
-symfony ?? ou encore laravel si on a trop la flemme de se taper les install...
-angularJS
-css
-html


pour la base de données sqlite, lancer dans le terminal la commande (marche aussi avec MariaDb):

-php artisan make:migration create_books_table 

: cela devrait créer le fichier .php "create_books_table".
avec des fichiers "up", "down", déjà remplies

-lancer aussi la commande :

php artisan make:model Book

après avoir créé les fonctions :

```
 /*
    fonction générée par nathan 
    */
    public function books(): HasMany 
    {
        return $this->hasMany(Book::class);
    }
```
Il faut lancer la commande : 

```bash
php artisan migrate
```

Cela va permettre de créer les tables définies, comme :

-"users" : create_users_table
-"books" : create_books_table 

A partir de là, on peut commencer à faire des requêtes.

Mais il faut d'abord créer une factory.
Pour cela, il faut utiliser la commande :

```bash
php artisan make:factory BookFactory
```

Cela va créer le factory de book.
Il y en avait déjà un pour user (userFactory)

Il faut faire :

```bash
php artisan db:seed
```

pour mettre à jour ce qui a été fait dans le dossier databaseSeeder.php ; 
c'est à dire, les ajouts en base avec des créations de lignes (tuples).


```bash
php artisan make:controller BookController
```
créé le controller, permet de récupérer les données créées via le seed.

app > Http > Controllers > Controller

il faut rentrer dans bookController et créer la méthode index.
Puis dans view, ajouter le dossier books puis le fichier index.blade.php.


Pour spécifier les caractéristiques des colonnes d'une table, il faut écrire dans : 

database > migrations > /var/www/html/ListeNoir2/database/migrations/2024_09_16_093242_create_books_table.php




Les fichiers à modifier :

dans resources et dans routes :

-web.php
-index.blade.php
-app(ou welcome).blade.php

dans app :

http> Controllers : 

-BookControllers.php (créé directement par moi)

Models:

-Book.php et User.php

database :

-BookFactory
-UserFactory...

--> 27:10

Pour créer un objet (ici livre), il faut la vue, qui va représenter le formulaire
on va pouvoir indiquer le titre, et ensuite on aura besoin d'enregistrer.

Remarque : 

-Parfois il faut update la page en utilisant directement ctrl+R ; sinon, simplement reculer pour mettre à jour ne suffira pas 
pour update la page risqu de laisser en place des problèmes.


Comment gérer :

-"mass asssignment erreur" :
cela est lié au système de sécurité qui empêche l'injection de n'importe quoi dans la table.
(dans le cas de l'exemple : ajouter title et userId)

-"Class "App\Http\Controllers\RBook" does not exist" : cela signifie qu'une de vos variables utilisées dans vos méthodes, probablement dans le fichier
BookController.php, possède un nom de type erroné. C'est probablement juste une erreur de typographie.
Chercher par mot clé le nom du type (ici "RBOOK") dans l'un de vos fichier du dossier app/HTTP/Controller.


-Pour utiliser MariaDB, consultez la page suivante :

https://www.cloudways.com/blog/connect-mariadb-to-laravel/


Laravel X MariaDB: 

fichiers autogénérés pour Maria DB par la commande "php artisan make:model Post -m": 

-/var/www/html/ListeNoir2/database/migrations/2024_09_20_085455_create_posts_table.php
-app/Models/Post.php

résoudre :

nécessaire pour lancer  "php artisan migrate" (DÉBUT) :

- ERROR 2002 (HY000): Can't connect to local MySQL server through socket '/var/run/mysqld/mysqld.sock' (13) 

--> https://forum.ubuntu-fr.org/viewtopic.php?id=2064313

- voir et supprimer les users anonymes : 

- accéder à mysql : sudo mysql

--> https://webhostinggeeks.com/howto/how-to-delete-anonymous-users-from-mysql-on-centos-6-2/

- sur mysql, créer un nouvel utilisateur avec son mdp : 

CREATE USER 'nathanb'@'localhost' IDENTIFIED "monmdp";

la commande pour lancer avec un mode user se trouve juste ici :

-https://www.digitalocean.com/community/tutorials/how-to-create-a-new-user-and-grant-permissions-in-mysql

GRANT CREATE ON *.* TO 'nathanb'@'localhost';

GRANT ALL PRIVILEGES ON *.* TO 'nathanb'@'localhost' WITH GRANT OPTION;  --> il faut donner les droits à votre user, ici, "nathanb"

nécessaire pour lancer  "php artisan migrate" (FIN)

Dans "mysql", pour connaître les tables disponibles :

-SELECT table_name
FROM INFORMATION_SCHEMA.TABLES
WHERE table_type = 'BASE TABLE'

(https://www.datameer.com/blog/sql_how-to-display-all-the-tables-from-a-database/)